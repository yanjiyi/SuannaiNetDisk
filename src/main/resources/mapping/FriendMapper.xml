<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suannai.netdisk.mapper.FriendMapper">
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.Friend">
    <constructor>
      <idArg column="Id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FrdID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Ownner" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Who" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, FrdID, Ownner, Who, Date
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friends
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.FriendExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends (Id, FrdID, Ownner, 
      Who, Date)
    values (#{id,jdbcType=INTEGER}, #{frdid,jdbcType=INTEGER}, #{ownner,jdbcType=INTEGER}, 
      #{who,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="frdid != null">
        FrdID,
      </if>
      <if test="ownner != null">
        Ownner,
      </if>
      <if test="who != null">
        Who,
      </if>
      <if test="date != null">
        Date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="frdid != null">
        #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.frdid != null">
        FrdID = #{record.frdid,jdbcType=INTEGER},
      </if>
      <if test="record.ownner != null">
        Ownner = #{record.ownner,jdbcType=INTEGER},
      </if>
      <if test="record.who != null">
        Who = #{record.who,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        Date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set Id = #{record.id,jdbcType=INTEGER},
      FrdID = #{record.frdid,jdbcType=INTEGER},
      Ownner = #{record.ownner,jdbcType=INTEGER},
      Who = #{record.who,jdbcType=VARCHAR},
      Date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    <set>
      <if test="frdid != null">
        FrdID = #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        Ownner = #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        Who = #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        Date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    set FrdID = #{frdid,jdbcType=INTEGER},
      Ownner = #{ownner,jdbcType=INTEGER},
      Who = #{who,jdbcType=VARCHAR},
      Date = #{date,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.Friend">
    <constructor>
      <idArg column="Id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FrdID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Ownner" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Who" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, FrdID, Ownner, Who, Date
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friends
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.FriendExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends (Id, FrdID, Ownner, 
      Who, Date)
    values (#{id,jdbcType=INTEGER}, #{frdid,jdbcType=INTEGER}, #{ownner,jdbcType=INTEGER}, 
      #{who,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="frdid != null">
        FrdID,
      </if>
      <if test="ownner != null">
        Ownner,
      </if>
      <if test="who != null">
        Who,
      </if>
      <if test="date != null">
        Date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="frdid != null">
        #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.frdid != null">
        FrdID = #{record.frdid,jdbcType=INTEGER},
      </if>
      <if test="record.ownner != null">
        Ownner = #{record.ownner,jdbcType=INTEGER},
      </if>
      <if test="record.who != null">
        Who = #{record.who,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        Date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set Id = #{record.id,jdbcType=INTEGER},
      FrdID = #{record.frdid,jdbcType=INTEGER},
      Ownner = #{record.ownner,jdbcType=INTEGER},
      Who = #{record.who,jdbcType=VARCHAR},
      Date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    <set>
      <if test="frdid != null">
        FrdID = #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        Ownner = #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        Who = #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        Date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    set FrdID = #{frdid,jdbcType=INTEGER},
      Ownner = #{ownner,jdbcType=INTEGER},
      Who = #{who,jdbcType=VARCHAR},
      Date = #{date,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.Friend">
    <constructor>
      <arg column="friends_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friends_userid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friends_ownner" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friends_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="addDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    friends_id, friends_userid, friends_ownner, friends_name, addDate
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.FriendExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends (friends_id, friends_userid, friends_ownner, 
      friends_name, addDate)
    values (#{friendsId,jdbcType=INTEGER}, #{friendsUserid,jdbcType=INTEGER}, #{friendsOwnner,jdbcType=INTEGER}, 
      #{friendsName,jdbcType=VARCHAR}, #{adddate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="friendsId != null">
        friends_id,
      </if>
      <if test="friendsUserid != null">
        friends_userid,
      </if>
      <if test="friendsOwnner != null">
        friends_ownner,
      </if>
      <if test="friendsName != null">
        friends_name,
      </if>
      <if test="adddate != null">
        addDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="friendsId != null">
        #{friendsId,jdbcType=INTEGER},
      </if>
      <if test="friendsUserid != null">
        #{friendsUserid,jdbcType=INTEGER},
      </if>
      <if test="friendsOwnner != null">
        #{friendsOwnner,jdbcType=INTEGER},
      </if>
      <if test="friendsName != null">
        #{friendsName,jdbcType=VARCHAR},
      </if>
      <if test="adddate != null">
        #{adddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    <set>
      <if test="record.friendsId != null">
        friends_id = #{record.friendsId,jdbcType=INTEGER},
      </if>
      <if test="record.friendsUserid != null">
        friends_userid = #{record.friendsUserid,jdbcType=INTEGER},
      </if>
      <if test="record.friendsOwnner != null">
        friends_ownner = #{record.friendsOwnner,jdbcType=INTEGER},
      </if>
      <if test="record.friendsName != null">
        friends_name = #{record.friendsName,jdbcType=VARCHAR},
      </if>
      <if test="record.adddate != null">
        addDate = #{record.adddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set friends_id = #{record.friendsId,jdbcType=INTEGER},
      friends_userid = #{record.friendsUserid,jdbcType=INTEGER},
      friends_ownner = #{record.friendsOwnner,jdbcType=INTEGER},
      friends_name = #{record.friendsName,jdbcType=VARCHAR},
      addDate = #{record.adddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.Friend">
    <constructor>
      <idArg column="Id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FrdID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Ownner" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Who" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, FrdID, Ownner, Who, Date
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friends
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.FriendExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends (Id, FrdID, Ownner, 
      Who, Date)
    values (#{id,jdbcType=INTEGER}, #{frdid,jdbcType=INTEGER}, #{ownner,jdbcType=INTEGER}, 
      #{who,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.Friend">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="frdid != null">
        FrdID,
      </if>
      <if test="ownner != null">
        Ownner,
      </if>
      <if test="who != null">
        Who,
      </if>
      <if test="date != null">
        Date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="frdid != null">
        #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.FriendExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.frdid != null">
        FrdID = #{record.frdid,jdbcType=INTEGER},
      </if>
      <if test="record.ownner != null">
        Ownner = #{record.ownner,jdbcType=INTEGER},
      </if>
      <if test="record.who != null">
        Who = #{record.who,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        Date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set Id = #{record.id,jdbcType=INTEGER},
      FrdID = #{record.frdid,jdbcType=INTEGER},
      Ownner = #{record.ownner,jdbcType=INTEGER},
      Who = #{record.who,jdbcType=VARCHAR},
      Date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    <set>
      <if test="frdid != null">
        FrdID = #{frdid,jdbcType=INTEGER},
      </if>
      <if test="ownner != null">
        Ownner = #{ownner,jdbcType=INTEGER},
      </if>
      <if test="who != null">
        Who = #{who,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        Date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suannai.netdisk.model.Friend">
    update friends
    set FrdID = #{frdid,jdbcType=INTEGER},
      Ownner = #{ownner,jdbcType=INTEGER},
      Who = #{who,jdbcType=VARCHAR},
      Date = #{date,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>