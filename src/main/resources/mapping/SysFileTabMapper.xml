<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suannai.netdisk.mapper.SysFileTabMapper">
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.SysFileTab">
    <constructor>
      <idArg column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FileName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FileHash" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Location" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FileSize" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="InUse" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, FileName, FileHash, Location, FileSize, InUse
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.SysFileTabExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sysfiletab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sysfiletab
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sysfiletab
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.SysFileTabExample">
    delete from sysfiletab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.SysFileTab">
    insert into sysfiletab (ID, FileName, FileHash, 
      Location, FileSize, InUse
      )
    values (#{id,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, #{filehash,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{filesize,jdbcType=BIGINT}, #{inuse,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.SysFileTab">
    insert into sysfiletab
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="filename != null">
        FileName,
      </if>
      <if test="filehash != null">
        FileHash,
      </if>
      <if test="location != null">
        Location,
      </if>
      <if test="filesize != null">
        FileSize,
      </if>
      <if test="inuse != null">
        InUse,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filehash != null">
        #{filehash,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        #{filesize,jdbcType=BIGINT},
      </if>
      <if test="inuse != null">
        #{inuse,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.SysFileTabExample" resultType="java.lang.Long">
    select count(*) from sysfiletab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sysfiletab
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.filename != null">
        FileName = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.filehash != null">
        FileHash = #{record.filehash,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        Location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.filesize != null">
        FileSize = #{record.filesize,jdbcType=BIGINT},
      </if>
      <if test="record.inuse != null">
        InUse = #{record.inuse,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sysfiletab
    set ID = #{record.id,jdbcType=INTEGER},
      FileName = #{record.filename,jdbcType=VARCHAR},
      FileHash = #{record.filehash,jdbcType=VARCHAR},
      Location = #{record.location,jdbcType=VARCHAR},
      FileSize = #{record.filesize,jdbcType=BIGINT},
      InUse = #{record.inuse,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suannai.netdisk.model.SysFileTab">
    update sysfiletab
    <set>
      <if test="filename != null">
        FileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filehash != null">
        FileHash = #{filehash,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        Location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        FileSize = #{filesize,jdbcType=BIGINT},
      </if>
      <if test="inuse != null">
        InUse = #{inuse,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suannai.netdisk.model.SysFileTab">
    update sysfiletab
    set FileName = #{filename,jdbcType=VARCHAR},
      FileHash = #{filehash,jdbcType=VARCHAR},
      Location = #{location,jdbcType=VARCHAR},
      FileSize = #{filesize,jdbcType=BIGINT},
      InUse = #{inuse,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>