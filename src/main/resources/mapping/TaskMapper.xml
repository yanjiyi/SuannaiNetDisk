<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suannai.netdisk.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.suannai.netdisk.model.Task">
    <constructor>
      <idArg column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="TaskType" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UserID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="TargetID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="TaskStatus" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="Additional" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Idle" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="GID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Aria2ID" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TaskType, Date, UserID, TargetID, TaskStatus, Additional, Idle, GID, Aria2ID
  </sql>
  <select id="selectByExample" parameterType="com.suannai.netdisk.model.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suannai.netdisk.model.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suannai.netdisk.model.Task">
    insert into task (ID, TaskType, Date, 
      UserID, TargetID, TaskStatus, 
      Additional, Idle, GID, 
      Aria2ID)
    values (#{id,jdbcType=INTEGER}, #{tasktype,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=INTEGER}, #{targetid,jdbcType=INTEGER}, #{taskstatus,jdbcType=BIT}, 
      #{additional,jdbcType=INTEGER}, #{idle,jdbcType=BIT}, #{gid,jdbcType=VARCHAR}, 
      #{aria2id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.suannai.netdisk.model.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="tasktype != null">
        TaskType,
      </if>
      <if test="date != null">
        Date,
      </if>
      <if test="userid != null">
        UserID,
      </if>
      <if test="targetid != null">
        TargetID,
      </if>
      <if test="taskstatus != null">
        TaskStatus,
      </if>
      <if test="additional != null">
        Additional,
      </if>
      <if test="idle != null">
        Idle,
      </if>
      <if test="gid != null">
        GID,
      </if>
      <if test="aria2id != null">
        Aria2ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tasktype != null">
        #{tasktype,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="targetid != null">
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="taskstatus != null">
        #{taskstatus,jdbcType=BIT},
      </if>
      <if test="additional != null">
        #{additional,jdbcType=INTEGER},
      </if>
      <if test="idle != null">
        #{idle,jdbcType=BIT},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=VARCHAR},
      </if>
      <if test="aria2id != null">
        #{aria2id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suannai.netdisk.model.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tasktype != null">
        TaskType = #{record.tasktype,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        Date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null">
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.targetid != null">
        TargetID = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.taskstatus != null">
        TaskStatus = #{record.taskstatus,jdbcType=BIT},
      </if>
      <if test="record.additional != null">
        Additional = #{record.additional,jdbcType=INTEGER},
      </if>
      <if test="record.idle != null">
        Idle = #{record.idle,jdbcType=BIT},
      </if>
      <if test="record.gid != null">
        GID = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.aria2id != null">
        Aria2ID = #{record.aria2id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set ID = #{record.id,jdbcType=INTEGER},
      TaskType = #{record.tasktype,jdbcType=INTEGER},
      Date = #{record.date,jdbcType=TIMESTAMP},
      UserID = #{record.userid,jdbcType=INTEGER},
      TargetID = #{record.targetid,jdbcType=INTEGER},
      TaskStatus = #{record.taskstatus,jdbcType=BIT},
      Additional = #{record.additional,jdbcType=INTEGER},
      Idle = #{record.idle,jdbcType=BIT},
      GID = #{record.gid,jdbcType=VARCHAR},
      Aria2ID = #{record.aria2id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suannai.netdisk.model.Task">
    update task
    <set>
      <if test="tasktype != null">
        TaskType = #{tasktype,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        Date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="targetid != null">
        TargetID = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="taskstatus != null">
        TaskStatus = #{taskstatus,jdbcType=BIT},
      </if>
      <if test="additional != null">
        Additional = #{additional,jdbcType=INTEGER},
      </if>
      <if test="idle != null">
        Idle = #{idle,jdbcType=BIT},
      </if>
      <if test="gid != null">
        GID = #{gid,jdbcType=VARCHAR},
      </if>
      <if test="aria2id != null">
        Aria2ID = #{aria2id,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suannai.netdisk.model.Task">
    update task
    set TaskType = #{tasktype,jdbcType=INTEGER},
      Date = #{date,jdbcType=TIMESTAMP},
      UserID = #{userid,jdbcType=INTEGER},
      TargetID = #{targetid,jdbcType=INTEGER},
      TaskStatus = #{taskstatus,jdbcType=BIT},
      Additional = #{additional,jdbcType=INTEGER},
      Idle = #{idle,jdbcType=BIT},
      GID = #{gid,jdbcType=VARCHAR},
      Aria2ID = #{aria2id,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>